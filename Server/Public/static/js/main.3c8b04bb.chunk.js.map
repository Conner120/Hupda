{"version":3,"sources":["views/Home/Home.tsx","views/NotFound/NotFound.tsx","stores/AppState.ts","stores/ProfileState.ts","stores/index.ts","components/Post/Edit/Post.tsx","components/Post/View/Post.tsx","views/PostView/PostView.tsx","views/LoginView/LoginView.tsx","views/CreatePostView/CreatePostView.tsx","views/ProfileView/ProfileView.tsx","views/TopicView/TopicView.tsx","Routes.tsx","App.tsx","serviceWorker.ts","theme.js","index.tsx"],"names":["Home","AppState","observable","Profile","storesContext","React","createContext","App","ProfileState","useStores","useContext","useStyles","makeStyles","theme","createStyles","root","flexShrink","media","height","paddingTop","content","width","titleBox","floatRight","float","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","large","spacing","PostEdit","props","classes","history","useHistory","useState","title","setTitle","setContent","console","log","Card","className","CardHeader","share","id","subheader","TextField","autoFocus","autoComplete","label","value","onChange","event","target","CardContent","multiline","variant","rowsMax","post","raised","Tooltip","poster","first","last","Avatar","aria-label","src","profilepicuri","alt","Link","onClick","push","Typography","sharedContent","moment","createdAt","fromNow","CardActions","Button","color","fetch","method","headers","Accept","auth","body","JSON","stringify","alc","then","res","json","whiteSpace","maxHeight","PostView","goToProfile","split","map","i","IconButton","useParams","setPost","requestSent","setRequestSent","useEffect","Cookies","get","set","flexGrow","paper","padding","palette","text","secondary","profile","setProfile","prof","index","posts","length","Grid","container","item","xs","md","Paper","element","TopicViewPostView","key","Routes","exact","path","component","HomeView","NotFoundView","LoginView","to","display","appBar","zIndex","drawer","easing","sharp","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","hide","drawerOpen","drawerClose","overflowX","breakpoints","down","toolbar","alignItems","justifyContent","mixins","location","useLocation","open","setOpen","goToPage","CssBaseline","AppBar","position","clsx","Toolbar","edge","window","pathname","noWrap","Drawer","Divider","List","ListItem","button","selected","startsWith","ListItemIcon","size","ListItemText","primary","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","createMuiTheme","main","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3c8b04bb.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Home() {\n    return (\n        <div>\n            test\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Home() {\n    return (\n        <div>\n            not found\n        </div>\n    )\n}\n","import { observable } from 'mobx';\n\nexport default class AppState {\n  @observable auth: string = \"\";\n}\n","import { observable } from 'mobx';\n\nexport default class Profile {\n    @observable id: string = \"\";\n}\n","import React from 'react'\nimport AppState from './AppState'\nimport ProfileState from './ProfileState'\nconst storesContext = React.createContext({\n\tApp: new AppState(),\n\tProfile: new ProfileState()\n})\n\nexport const useStores = () => React.useContext(storesContext)","import React, { useState } from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Post } from '../../../Htypes';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport moment from 'moment';\nimport { useStores } from '../../../stores'\nimport { useHistory } from \"react-router-dom\";\nimport { Link, TextField } from '@material-ui/core';\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            // maxWidth: 345,\n            flexShrink: 0,\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\n        },\n        content: {\n            width: '100%',\n            height: '40%'\n        },\n        titleBox: {\n            width: '100%'\n        },\n        floatRight: {\n            float: 'right'\n        },\n        expand: {\n            transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n                duration: theme.transitions.duration.shortest,\n            }),\n        },\n        expandOpen: {\n            transform: 'rotate(180deg)',\n        },\n        avatar: {\n        },\n        large: {\n            width: theme.spacing(6),\n            height: theme.spacing(6),\n        },\n    }),\n);\nexport default function PostEdit(props: { share: { id: string, post: Post } }) {\n    const classes = useStyles();\n    const { App } = useStores()\n    const history = useHistory();\n    const goToProfile = () => {\n        history.push(`/profile/${props.share.post?.poster.id}`)\n    }\n    const [title, setTitle] = useState('')\n    const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setTitle(\n            event.target.value,\n        );\n    };\n    const [content, setContent] = useState('')\n    const handleChangeContent = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setContent(\n            event.target.value,\n        );\n    };\n    const SendPost = () => {\n        if (props.share.id) {\n            fetch(`/api/post/share`, {\n                method: 'Post',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    'jwt': App.auth\n                },\n                body: JSON.stringify({\n                    alc: 2,\n                    content,\n                    title,\n                    media: [],\n                    id: props.share.id\n                })\n            }).then(res => {\n                return res.json();\n            }).then(post => {\n                history.push(`/post/${post.id}`)\n                // console.log(post)\n            });\n        } else {\n            fetch(`/api/post`, {\n                method: 'Post',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    'jwt': App.auth\n                },\n                body: JSON.stringify({\n                    alc: 2,\n                    content,\n                    title,\n                    media: []\n                })\n            }).then(res => {\n                return res.json();\n            }).then(post => {\n                history.push(`/post/${post.id}`)\n                // console.log(post)\n            });\n        }\n    }\n    console.log(props)\n    return (\n        <div>\n            < Card className={classes.root} >\n                <CardHeader\n                    title={props.share.id ? 'Share Post' : 'Create Post'}\n                    subheader={<TextField autoFocus={true} id=\"standard-basic\" autoComplete='off'\n                        label=\"Post Title\" value={title} className={classes.titleBox} onChange={handleChangeTitle}></TextField>}\n                />\n                <CardContent>\n                    <TextField\n                        id=\"outlined-multiline-static\"\n                        label=\"Content\"\n                        multiline={true}\n                        className={classes.content}\n                        variant=\"outlined\"\n                        rowsMax={23}\n                        onChange={handleChangeContent}\n                        value={content}\n                    />\n                    <br />\n                    <br />\n                    {props.share.post.id ? < Card raised={true} className={classes.root} >\n                        <CardHeader\n                            avatar={\n\n                                <Tooltip title={`${props.share.post?.poster.first} ${props.share.post.poster.last}`}>\n                                    <Avatar aria-label=\"recipe\" className={classes.large} src={props.share.post?.poster.profilepicuri} alt={`Profile image for ${props.share.post?.poster.first} ${props.share.post?.poster.last}`}>\n                                    </Avatar>\n                                </Tooltip>\n                            }\n\n                            title={<div><Link onClick={goToProfile}><Typography variant='overline'>{`${props.share.post.sharedContent?.poster.first} ${props.share.post.poster.last}`}</Typography></Link> {props.share.post.sharedContent?.title}</div>}\n                            subheader={moment(props.share.post?.createdAt).fromNow()}\n                        />\n                        <CardContent>\n                            <Typography>\n                                {props.share.post?.content}\n                            </Typography>\n                        </CardContent>\n                        <CardActions>\n                        </CardActions>\n                    </Card > : <div></div>}\n                </CardContent>\n                <CardActions className={classes.floatRight}>\n                    <Button color='secondary' variant=\"contained\" onClick={SendPost}>Post</Button>\n                </CardActions>\n            </Card >\n        </div >\n    )\n}\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Post } from '../../../Htypes';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport moment from 'moment';\nimport ShareIcon from '@material-ui/icons/Share';\nimport { useHistory } from \"react-router-dom\";\nimport { Link, IconButton } from '@material-ui/core';\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\n        },\n        floatRight: {\n            float: 'right'\n        },\n        expand: {\n            transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n                duration: theme.transitions.duration.shortest,\n            }),\n        },\n        expandOpen: {\n            transform: 'rotate(180deg)',\n        },\n        avatar: {\n        },\n        large: {\n            width: theme.spacing(6),\n            height: theme.spacing(6),\n        },\n        content: {\n            whiteSpace: 'pre-wrap',\n            // overflowY: 'auto', /* Add vertical scrollbar */\n            // width: '100%',\n            maxHeight: 650,\n        }\n    }),\n);\n\nexport default function PostView(props: { post: Post }) {\n    const classes = useStyles();\n    const history = useHistory();\n    const goToProfile = () => {\n        history.push(`/profile/${props.post.poster.id}`)\n    }\n    const sharePost = () => {\n        history.push(`/create/post/${props.post.id}/true`)\n    }\n    console.log(props.post.content.split('\\n'))\n    return (\n        <div>\n            < Card className={classes.root} >\n                <CardHeader\n                    avatar={\n\n                        <Tooltip title={`${props.post.poster.first} ${props.post.poster.last}`}>\n                            <Avatar aria-label=\"recipe\" className={classes.large} src={props.post.poster.profilepicuri} alt={`Profile image for ${props.post.poster.first} ${props.post.poster.last}`}>\n                            </Avatar>\n                        </Tooltip>\n                    }\n\n                    title={<div><Link onClick={goToProfile}><Typography variant='overline'>{`${props.post.poster.first} ${props.post.poster.last}`}</Typography></Link> {props.post.title}</div>}\n                    subheader={moment(props.post.createdAt).fromNow()}\n                />\n                <CardContent>\n                    <div className={classes.content}>\n                        {props.post.content.split('\\n').map((i) => {\n                            return (<Typography>\n                                {i}\n                            </Typography>)\n                        })}\n                    </div>\n                    <br />\n                    {props.post.sharedContent ? < Card raised={true} className={classes.root} >\n                        <CardHeader\n                            avatar={\n\n                                <Tooltip title={`${props.post.sharedContent?.poster.first} ${props.post.poster.last}`}>\n                                    <Avatar aria-label=\"recipe\" className={classes.large} src={props.post.sharedContent?.poster.profilepicuri} alt={`Profile image for ${props.post.sharedContent?.poster.first} ${props.post.sharedContent?.poster.last}`}>\n                                    </Avatar>\n                                </Tooltip>\n                            }\n\n                            title={<div><Link onClick={goToProfile}><Typography variant='overline'>{`${props.post.sharedContent?.poster.first} ${props.post.poster.last}`}</Typography></Link> <Link onClick={goToProfile}>{props.post.sharedContent?.title}</Link></div>}\n                            subheader={moment(props.post.sharedContent?.createdAt).fromNow()}\n                        />\n                        <CardContent>\n                            <Typography className={classes.content}>\n                                {props.post.sharedContent?.content}\n                            </Typography>\n                        </CardContent>\n                        <CardActions>\n                        </CardActions>\n                    </Card > : <div></div>}\n                </CardContent>\n                <CardActions className={classes.floatRight}>\n                    {\n                        props.post.sharedContent ? <></> : <IconButton onClick={sharePost}><ShareIcon /></IconButton>\n                    }\n                </CardActions>\n            </Card >\n        </div >\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from \"react-router-dom\";\nimport { useStores } from '../../stores'\nimport { Post } from '../../components'\nexport default function PostView() {\n    const { id } = useParams();\n    let [post, setPost] = useState()\n    let [requestSent, setRequestSent] = useState(false)\n    const { App } = useStores()\n\n    console.log(App.auth)\n    useEffect(() => {\n        // Run! Like go get some data from an API.\n        if (!requestSent) {\n            setRequestSent(true)\n            fetch(`/api/post?id=${id}`, {\n                method: 'GET',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    'jwt': App.auth\n                },\n            }).then(res => {\n                return res.json();\n            }).then(post => {\n                setPost(post)\n                // console.log(post)\n            });\n        }\n    });\n    return (\n        <div>\n            {(post) ? <Post post={post} /> : <h3>loading</h3>}\n        </div>\n    )\n}\n","import React from 'react'\nimport Cookies from 'js-cookie'\nimport { useHistory } from \"react-router-dom\";\nexport default function Home() {\n    let history = useHistory();\n    if (Cookies.get('jwt')) {\n        // AppState.auth = Cookies.get('jwt')\n        history.push('/home')\n    } else {\n    }\n    const login = () => {\n        Cookies.set('jwt', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImEyYjlhNjhlLTI1YmQtNDYxNC04NjUyLTJhYzg5YTg4OTVmNyIsInVzZXJuYW1lIjoidGMxIiwicGFzc3dvcmQiOiIkMmEkMTAkVmllMXNNWVRTT1NZcHlRWEJuckpZLklTTjh5UW90L2tUZlN0azRvOGVicVM4aFRXYnVVU0ciLCJjcmVhdGVkQXQiOiIyMDIwLTA2LTE3VDAyOjM2OjQ5LjUwNFoiLCJ1cGRhdGVkQXQiOiIyMDIwLTA2LTE3VDAyOjM2OjQ5LjUwNFoiLCJpYXQiOjE1OTI1ODE2NzQsImV4cCI6MTU5NTE3MzY3NH0.EZFQZSnOtL-PpLBIefuXoB0XX27JbCRIl_aTrIvDH8c')\n        history.push('/home')\n    }\n    return (\n        <div>\n            login\n            <button onClick={login}>login</button>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from \"react-router-dom\";\nimport { useStores } from '../../stores'\nimport { PostEdit } from '../../components'\nimport { Post } from '../../Htypes';\n\nexport default function PostView() {\n    const { id } = useParams();\n    let [post, setPost] = useState({} as Post)\n    let [requestSent, setRequestSent] = useState(false)\n    const { App } = useStores()\n    useEffect(() => {\n        // Run! Like go get some data from an API.\n        if ((!requestSent) && id) {\n            setRequestSent(true)\n            fetch(`/api/post?id=${id}`, {\n                method: 'GET',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    'jwt': App.auth\n                },\n            }).then(res => {\n                return res.json();\n            }).then(post => {\n                setPost(post)\n                // console.log(post)\n            });\n        }\n    });\n    console.log(App.auth)\n    return (\n        <div>\n            {(post) ? <PostEdit share={{ id, post: post }} /> : <h3>loading</h3>}\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from \"react-router-dom\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useStores } from '../../stores'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Post } from '../../components';\nimport { Post as IPost } from '../../Htypes';\nimport { profile } from 'console';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n    },\n}));\nexport default function PostView() {\n    const { id } = useParams();\n    let [profile, setProfile] = useState()\n    let [requestSent, setRequestSent] = useState(false)\n    const { App } = useStores()\n    const [dense, setDense] = React.useState(false);\n    const [secondary, setSecondary] = React.useState(false);\n    console.log(App.auth)\n    const classes = useStyles();\n\n    useEffect(() => {\n        // Run! Like go get some data from an API.\n        if (!requestSent) {\n            setRequestSent(true)\n            fetch(`/api/profile/wPosts?id=${id}`, {\n                method: 'GET',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    'jwt': App.auth\n                },\n            }).then(res => {\n                return res.json();\n            }).then(post => {\n                let prof = post;\n                for (let index = 0; index < post.posts.length; index++) {\n                    post.posts[index].poster = prof\n                }\n                setProfile(post)\n                console.log(post)\n            });\n        }\n    });\n    console.log(profile)\n    return (\n        <div>\n            {(profile) ?\n                <Grid container spacing={3}>\n                    <Grid item xs={12} md={3}>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Paper className={classes.paper}>\n                            {profile.posts.map((element: any) =>\n                                <div>\n                                    <Post post={element} />\n                                    <br />\n                                </div>\n                            )}\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} md={3}>\n                    </Grid>\n                </Grid>\n                : <h3>loading</h3>\n            }\n        </div >\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from \"react-router-dom\";\nimport { useStores } from '../../stores'\nimport { Post } from '../../components'\nexport default function TopicViewPostView() {\n    const { key } = useParams();\n    return (\n        <div>\n            {key}\n        </div>\n    )\n}\n","import React from 'react';\nimport { Switch, Redirect, Route } from 'react-router-dom';\nimport Cookies from 'js-cookie'\nimport { useHistory } from \"react-router-dom\";\nimport {\n    Home as HomeView,\n    NotFound as NotFoundView,\n    PostView,\n    LoginView,\n    ProfileView,\n    TopicView,\n    CreatePostView,\n} from './views';\nimport { useStores } from './stores'\nimport Profile from './stores/ProfileState';\n\nconst Routes = () => {\n    let history = useHistory();\n    const { App } = useStores()\n    console.log(Cookies.get('jwt'))\n    if (Cookies.get('jwt')) {\n        App.auth = (Cookies.get('jwt') ? Cookies.get('jwt') : '') as string\n    } else {\n        history.push('/login')\n    }\n\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={HomeView} />\n            <Route\n                component={HomeView}\n                exact\n                path=\"/home\"\n            />\n            <Route\n                component={NotFoundView}\n                exact\n                path=\"/not-found\"\n            />\n            <Route path=\"/post/:id\">\n                <PostView />\n            </Route>\n            <Route path=\"/create/post/:id\">\n                <CreatePostView />\n            </Route>\n            <Route path=\"/create/post\">\n                <CreatePostView />\n            </Route>\n            <Route\n                component={LoginView}\n                exact\n                path=\"/login\"\n            />\n            <Route\n                path=\"/profile/:id\"\n            >\n                <ProfileView />\n            </Route>\n            <Route\n                path=\"/topic/:id\"\n            >\n                <TopicView />\n            </Route>\n            <Route\n                path=\"/topic\"\n            >\n                <TopicView />\n            </Route>\n            <Redirect to=\"/not-found\" />\n        </Switch>\n    );\n};\n\nexport default Routes;\n","import React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport { Switch, Route } from 'react-router-dom';\nimport {\n  LoginView\n} from './views';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Link } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\nimport ListItem from '@material-ui/core/ListItem';\nimport { FiActivity } from 'react-icons/fi'\nimport { RiUser3Line } from 'react-icons/ri'\n\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n// import Button from '@material-ui/core/Button'\nimport Routes from './Routes'\nimport { useStores } from './stores'\nconst drawerWidth = 240;\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.down('sm')]: {\n        width: theme.spacing(0) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  }),\n);\n\nexport default function App() {\n  let location = useLocation();\n  const history = useHistory();\n  const classes = useStyles();\n  const { App, Profile } = useStores()\n  const [open, setOpen] = React.useState(false);\n  let [requestSent, setRequestSent] = React.useState(false)\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const home = () => {\n    if (window.location.pathname !== '/') {\n      history.push('/')\n    }\n  }\n  useEffect(() => {\n    if (!requestSent) {\n      setRequestSent(true)\n      fetch(`/api/profile`, {\n        method: 'Get',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'jwt': App.auth\n        }\n      }).then(res => {\n        return res.json();\n      }).then(post => {\n        Profile.id = post.id\n      });\n    }\n  })\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const goToPage = (path: string) => {\n    history.push(path)\n  };\n  return (\n    <div className={classes.root}>\n      <Switch>\n        <Route\n          component={LoginView}\n          exact\n          path=\"/login\"\n        />\n        <Route\n        >\n          <CssBaseline />\n          <AppBar\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n              // [classes.appBarShift]: open,\n            })}\n          >\n            <Toolbar>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={open ? handleDrawerClose : handleDrawerOpen}\n                edge=\"start\"\n                className={clsx(classes.menuButton, {\n                  // [classes.hide]: open,\n                })}\n              >\n                {open ? <MenuOpenIcon /> : <MenuIcon />}\n              </IconButton>\n              <div onClick={home}>\n                <Typography variant=\"h6\" noWrap>\n                  Hupda\n              </Typography>\n              </div>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            variant=\"permanent\"\n            className={clsx(classes.drawer, {\n              [classes.drawerOpen]: open,\n              [classes.drawerClose]: !open,\n            })}\n            classes={{\n              paper: clsx({\n                [classes.drawerOpen]: open,\n                [classes.drawerClose]: !open,\n              }),\n            }}\n          >\n            <div className={classes.toolbar}>\n            </div>\n            <Divider />\n            <List>\n              <ListItem button onClick={() => { goToPage('/topic') }} key={'Trending Topics'} selected={location.pathname.startsWith('/topic')}>\n                <ListItemIcon><FiActivity size={'2em'} /></ListItemIcon>\n                <ListItemText primary={'Trending Topics'} />\n              </ListItem>\n              <ListItem button onClick={() => { goToPage(`/profile/${Profile.id}`) }} key={'My Page'} selected={location.pathname.startsWith('/profile')}>\n                <ListItemIcon><RiUser3Line size={'2em'} /></ListItemIcon>\n                <ListItemText primary={'My Page'} />\n              </ListItem>\n            </List>\n          </Drawer>\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Routes />\n          </main>\n        </Route>\n      </Switch>\n\n    </div >\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#183059',\n        },\n        secondary: {\n            main: '#E41C11',\n        },\n    },\n});\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {\n  BrowserRouter as Router, Redirect,\n} from \"react-router-dom\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport theme from './theme'\nimport { ThemeProvider } from '@material-ui/core';\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}